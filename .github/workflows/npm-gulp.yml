name: NodeJS with Gulp

on:
  push:
    branches: ["development", "pipeline"]
  pull_request:
    branches: ["development"]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies (root)
        run: npm install

      - name: Install dependencies (backend)
        working-directory: Backend
        run: npm install

      - name: Install dependencies (frontend)
        working-directory: Frontend
        run: npm install

      - name: check health
        working-directory: Backend 
        shell: bash
        env:
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
        run: |
          npm run dev
          SERVER_PID=$!
          sleep 10

          response=$(curl -ks http://localhost:3000/health)
          if [ "$response" != "OK" ]; then
            echo "Health check failed: $response"
            kill $SERVER_PID 
            exit 1
          else
            echo "Health check passed"
            kill $SERVER_PID
          fi

          

      # - name: Login
      #   working-directory: Backend
      #   shell: bash
      #   id: login
      #   env:
      #     USERNAME: ${{ secrets.USERNAME }}
      #     PASSWORD: ${{ secrets.PASSWORD }}
      #   run: |
      #     echo "Starting backend server"
      #     npm run serve &
      #     SERVER_PID=$!
      #     sleep 5

      #     response=$(curl -s -X POST http://localhost:3000/post/login \
      #     -H "Content-Type: application/json" \
      #     -d "{\"username\":\"$USERNAME\", \"password\":\"$PASSWORD\"}")
    
      #     token=$(echo "$response" | jq -r '.token')

      #     echo "::add-mask::$token"
      #     echo "token=$token" >> $GITHUB_OUTPUT

      #     kill $SERVER_PID
          
